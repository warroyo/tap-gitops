apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-harness
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
  labels:
    app.kubernetes.io/part-of: java-harness
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: harness-canary
    kapp.k14s.io/app: "1655842000127906348"
    kapp.k14s.io/association: v1.8cc43179f802eacfbb1ded22e6292b07
    testlabel: test
    app.kubernetes.io/component: run
    carto.run/workload-name: java-harness
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: run
      app.kubernetes.io/part-of: java-harness
      apps.tanzu.vmware.com/auto-configure-actuators: "false"
      apps.tanzu.vmware.com/has-tests: "true"
      apps.tanzu.vmware.com/workload-type: harness-canary
      carto.run/workload-name: java-harness
      conventions.carto.run/framework: spring-boot
      kapp.k14s.io/app: "1655842000127906348"
      kapp.k14s.io/association: v1.8cc43179f802eacfbb1ded22e6292b07
      tanzu.app.live.view: "true"
      tanzu.app.live.view.application.actuator.path: actuator
      tanzu.app.live.view.application.actuator.port: "8080"
      tanzu.app.live.view.application.flavours: spring-boot
      tanzu.app.live.view.application.name: java-harness
      testlabel: test
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "1"
        boot.spring.io/version: 2.5.14
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/auto-configure-actuators-check
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/app-live-view-appflavour-check
          spring-boot-convention/app-live-view-connector-boot
          spring-boot-convention/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-appflavour-check
        developer.conventions/target-containers: workload
        kapp.k14s.io/identity: v1;dev-tap/carto.run/Workload/java-harness;carto.run/v1alpha1
        kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"labels":{"app.kubernetes.io/part-of":"java-harness","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/workload-type":"harness-canary","kapp.k14s.io/app":"1655842000127906348","kapp.k14s.io/association":"v1.8cc43179f802eacfbb1ded22e6292b07","testlabel":"test"},"name":"java-harness","namespace":"dev-tap"},"spec":{"params":[{"name":"annotations","value":{"autoscaling.knative.dev/minScale":"1"}},{"name":"gitops_repository","value":"https://github.com/warroyo/tap-gitops"},{"name":"gitops_branch","value":"main"}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/warroyo/tanzu-java-web-app-gitops"}}}}'
        kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: java-harness
        apps.tanzu.vmware.com/auto-configure-actuators: "false"
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/workload-type: harness-canary
        carto.run/workload-name: java-harness
        conventions.carto.run/framework: spring-boot
        kapp.k14s.io/app: "1655842000127906348"
        kapp.k14s.io/association: v1.8cc43179f802eacfbb1ded22e6292b07
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.path: actuator
        tanzu.app.live.view.application.actuator.port: "8080"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: java-harness
        testlabel: test
    spec:
      containers:
      - env:
        - name: JAVA_TOOL_OPTIONS
          value: -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: dev.registry.pivotal.io/warroyo/supply-chain/java-harness-dev-tap@sha256:06ecaa141362d2131d202af49ad708d88252d8988af422a867e052f8a0ee5eb9
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default
---
apiVersion: v1
kind: Service
metadata:
  name: java-harness
  labels:
    app.kubernetes.io/part-of: java-harness
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: harness-canary
    kapp.k14s.io/app: "1655842000127906348"
    kapp.k14s.io/association: v1.8cc43179f802eacfbb1ded22e6292b07
    testlabel: test
    app.kubernetes.io/component: run
    carto.run/workload-name: java-harness
spec:
  selector:
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: java-harness
    apps.tanzu.vmware.com/auto-configure-actuators: "false"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: harness-canary
    carto.run/workload-name: java-harness
    conventions.carto.run/framework: spring-boot
    kapp.k14s.io/app: "1655842000127906348"
    kapp.k14s.io/association: v1.8cc43179f802eacfbb1ded22e6292b07
    tanzu.app.live.view: "true"
    tanzu.app.live.view.application.actuator.path: actuator
    tanzu.app.live.view.application.actuator.port: "8080"
    tanzu.app.live.view.application.flavours: spring-boot
    tanzu.app.live.view.application.name: java-harness
    testlabel: test
  ports:
  - targetPort: 8080
    port: 8080
    name: http
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  annotations:
    harness.io/managed: "true"
  name: java-harness-destinationrule
spec:
  host: java-harness
  trafficPolicy:
    loadBalancer:
      simple: RANDOM
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: java-harness-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - '*.{{.Values.baseDomain}}'
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  annotations:
    harness.io/managed: "true"
  name: java-harness-virtualservice
spec:
  gateways:
  - java-harness-gateway
  hosts:
  - java-harness.{{.Values.baseDomain}}
  http:
  - route:
    - destination:
        host: java-harness

